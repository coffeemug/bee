#!/usr/local/bin/python3
import configparser

import os
from pprint import pprint
from textwrap import wrap
from datetime import datetime
from time import time
from json import loads
from urllib.parse import urlencode
from urllib.request import urlopen
from sys import argv, exit

config_path = os.path.join(os.path.expanduser('~'),'.beerc')
auth_token = None

def load_auth_token():
    global auth_token
    dict1 = {}
    section = 'account'
    Config = configparser.ConfigParser()
    Config.read(config_path)
    options = Config.options(section)
    for option in options:
        try:
            dict1[option] = Config.get(section, option)
            if dict1[option] == -1:
                DebugPrint("skip: %s" % option)
        except:
            print("exception on %s!" % option)
            dict1[option] = None

    try:
        auth_token = dict1['auth_token']
    except (KeyError, configparser.NoSectionError):
        print('Error: Missing or malformed configuration file.\n')
        print('Please go to https://www.beeminder.com/api/v1/auth_token.json')
        print('Then create a ~/.beerc file like this:\n')

        print('[account]')
        print('auth_token: <your auth_token>')
        exit(1)

def time_to_days(dt):
    days = dt.days
    return '%sd' % days

def print_summary():
    data = loads(urlopen('https://www.beeminder.com/api/v1/users/me/goals.json?auth_token=%s' % (auth_token)).read().decode('utf-8'))

    parsed = sorted(data,key=lambda data:abs(data['losedate']))

    output = []
    for i in parsed:
        timeleft = datetime.fromtimestamp(int(i['losedate'])) - datetime.now()
        days = time_to_days(timeleft)
        line = ['$'+str(int(i['pledge'])),i['slug'],days,i['headsum']]
        output.append(line)
    col_width = max([len(i[1]) for i in output]) + 1
    for row in output:
        try:
            print(''.join((row[0].ljust(4),row[1].ljust(col_width),row[2].ljust(5),row[3])))
        except TypeError:
            pass

def submit_update():
    goal = argv[1]
    
    post = dict()
    post['auth_token'] = auth_token
    post['timestamp'] = round(time())
    post['value'] = argv[2]
    if len(argv)>3:
        post['comment'] = ' '.join(argv[3:])
    else:
        post['comment'] = 'via bmndr at %s' % datetime.now().strftime('%X')

    params = urlencode(post)
    params = params.encode('utf-8')

    data = loads(urlopen('https://www.beeminder.com/api/v1/users/me/goals/%s/datapoints.json' % goal, params).read().decode('utf-8'))
    pprint(data)

load_auth_token()
# output for running "bmndr"
if len(argv) == 1:
    print_summary()
# output for running "bmndr <goal> <data> <comment>"
else:
    submit_update()
